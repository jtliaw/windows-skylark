name: Build Windows Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - stable
      include_debug:
        description: 'Include Debug Info'
        required: false
        type: boolean
        default: false

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Tesseract OCR manually
      run: |
        # Download and install Tesseract OCR
        $downloadUrl = "https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-5.3.3.20231005.exe"
        $installerPath = "$env:TEMP\tesseract-installer.exe"
        
        Write-Host "Downloading Tesseract OCR installer..."
        Invoke-WebRequest -Uri $downloadUrl -OutFile $installerPath
        
        Write-Host "Installing Tesseract OCR..."
        Start-Process -FilePath $installerPath -ArgumentList "/S" -Wait
        
        # Add to PATH
        $tesseractPath = "C:\Program Files\Tesseract-OCR"
        if (Test-Path $tesseractPath) {
          echo "$tesseractPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Write-Host "Tesseract installed successfully"
        } else {
          Write-Host "Warning: Tesseract installation path does not exist"
        }
      shell: powershell
      
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        
        # Install project dependencies
        pip install -r requirements.txt
        
        # Make sure all necessary packages are installed
        pip install pyinstaller==6.2.0
        pip install pywin32
      shell: powershell
      
    - name: Download Tesseract language data
      run: |
        $tessdata = "C:\Program Files\Tesseract-OCR\tessdata"
        New-Item -Path $tessdata -ItemType Directory -Force | Out-Null
        
        # Download necessary language packs
        $languages = @("eng", "chi_sim", "jpn")
        
        foreach ($lang in $languages) {
          $url = "https://github.com/tesseract-ocr/tessdata_fast/raw/main/$lang.traineddata"
          $output = "$tessdata\$lang.traineddata"
          Write-Host "Downloading $lang language data..."
          try {
            Invoke-WebRequest -Uri $url -OutFile $output -ErrorAction Stop
          } catch {
            Write-Host "Failed to download $lang, trying alternative URL..."
            $url = "https://github.com/tesseract-ocr/tessdata/raw/main/$lang.traineddata"
            Invoke-WebRequest -Uri $url -OutFile $output -ErrorAction SilentlyContinue
          }
        }
      shell: powershell
      
    - name: Create launcher script
      shell: powershell
      run: |
        # Create launcher script line by line
        $lines = @(
          "import os",
          "import sys",
          "import subprocess",
          "",
          "if __name__ == '__main__':",
          "    # Set environment variables",
          "    os.environ['TESSERACT_CMD'] = 'C:\\\\Program Files\\\\Tesseract-OCR\\\\tesseract.exe'",
          "    os.environ['TESSDATA_PREFIX'] = 'C:\\\\Program Files\\\\Tesseract-OCR\\\\tessdata'",
          "    ",
          "    # Run main program",
          "    try:",
          "        subprocess.run([sys.executable, 'main.py'], check=True)",
          "    except subprocess.CalledProcessError as e:",
          "        print(f'Program exited with error: {e}')",
          "        input('Press Enter to exit...')",
          "        sys.exit(1)"
        )
        
        # Write content to file
        $lines | Out-File -FilePath "launcher.py" -Encoding UTF8
        Write-Host "Launcher script created"
      
    - name: Build with PyInstaller
      shell: powershell
      run: |
        Write-Host "Building Skylark Screen Translator..."
        
        # Use simple PyInstaller command
        pyinstaller --name SkylarkTranslator `
          --onefile `
          --windowed `
          --add-data "C:\Program Files\Tesseract-OCR\tesseract.exe;." `
          --add-data "C:\Program Files\Tesseract-OCR\tessdata;tessdata" `
          --hidden-import PyQt5.QtCore `
          --hidden-import PyQt5.QtGui `
          --hidden-import PyQt5.QtWidgets `
          --hidden-import pytesseract `
          --hidden-import PIL `
          --hidden-import mss `
          --hidden-import pynput `
          --hidden-import screeninfo `
          --hidden-import requests `
          --hidden-import argostranslate `
          --hidden-import stanza `
          --hidden-import ctranslate2 `
          --hidden-import sentencepiece `
          --hidden-import numpy `
          --hidden-import cv2 `
          --hidden-import ttkthemes `
          --hidden-import certifi `
          launcher.py
        
        # Check if build was successful
        if (!(Test-Path "dist\SkylarkTranslator.exe")) {
          throw "Build failed: executable file not found"
        }
        
        Write-Host "Build successful!"
      
    - name: Create distribution package
      shell: powershell
      run: |
        $releaseType = "${{ inputs.release_type }}"
        $version = Get-Date -Format "yyyy.MM.dd.HHmm"
        $packageName = "SkylarkTranslator_Windows_${releaseType}_v${version}"
        
        # Create package directory
        New-Item -Path "dist\$packageName" -ItemType Directory -Force | Out-Null
        
        # Copy program files
        Copy-Item "dist\SkylarkTranslator.exe" "dist\$packageName\" -Force
        
        # Copy language packs
        $tessdataSrc = "C:\Program Files\Tesseract-OCR\tessdata"
        $tessdataDst = "dist\$packageName\tessdata"
        if (Test-Path $tessdataSrc) {
          New-Item -Path $tessdataDst -ItemType Directory -Force | Out-Null
          Copy-Item "$tessdataSrc\*.traineddata" $tessdataDst -Force
        }
        
        # Create startup script - using here-string to avoid escaping issues
        $batchContent = @'
@echo off
chcp 65001 > nul
echo Starting Skylark Screen Translator...
cd /d %~dp0
start "" SkylarkTranslator.exe
'@
        $batchContent | Out-File -FilePath "dist\$packageName\start.bat" -Encoding Default
        
        # Create readme file
        $readmeLines = @(
          "Skylark Screen Translator - Windows Version",
          "Version: $version",
          "Type: $releaseType",
          "Build Time: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')",
          "",
          "== Quick Start ==",
          "1. Double-click 'start.bat' or run SkylarkTranslator.exe directly",
          "2. First use: go to 'Language Pack Management' to install translation packages",
          "3. After installation, restart the program and select translation language in settings",
          "",
          "== Usage Instructions ==",
          "â€¢ Left-click drag: select screen area",
          "â€¢ Right-click double-click: perform OCR and translation",
          "â€¢ Left-click: show/hide translation window",
          "â€¢ Mouse wheel: scroll translation content",
          "",
          "== Notes ==",
          "â€¢ This is an unsigned test version",
          "â€¢ Windows Defender may show security warnings (normal)",
          "â€¢ CPU needs to support SSE4.1 instruction set",
          "â€¢ Recommended 2GB+ RAM",
          "",
          "== Feedback ==",
          "If you encounter issues, please provide feedback at GitHub repository:",
          "https://github.com/jtliaw/Skylark-Screen-Translator"
        )
        $readmeLines | Out-File -FilePath "dist\$packageName\README.txt" -Encoding UTF8
        
        # Create ZIP package
        Compress-Archive -Path "dist\$packageName" -DestinationPath "dist\$packageName.zip" -Force
        
        Write-Host "Package created: $packageName.zip"
        
        # Set output variables
        echo "PACKAGE_NAME=$packageName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "PACKAGE_PATH=dist/$packageName.zip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: SkylarkTranslator-Windows-${{ inputs.release_type }}
        path: ${{ env.PACKAGE_PATH }}
        retention-days: 7
        
    - name: Create build summary
      shell: powershell
      run: |
        $size = (Get-Item "${{ env.PACKAGE_PATH }}").Length
        $sizeMB = [math]::Round($size/1MB, 2)
        
        Write-Host "## Build Complete âœ…" 
        Write-Host "- Release Type: ${{ inputs.release_type }}"
        Write-Host "- Include Debug: ${{ inputs.include_debug }}"
        Write-Host "- File Size: ${sizeMB} MB"
        Write-Host "- File Name: ${{ env.PACKAGE_NAME }}.zip"
        Write-Host ""
        Write-Host "ðŸ“¥ Download built files:"
        Write-Host "1. Click the Actions tab above"
        Write-Host "2. Select this run"
        Write-Host "3. Download ZIP file in the Artifacts section"
        Write-Host ""
        Write-Host "ðŸ§ª Test Instructions:"
        Write-Host "1. Extract ZIP file"
        Write-Host "2. Run start.bat or SkylarkTranslator.exe directly"
        Write-Host "3. First run requires language pack installation"
